name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check-up-to-date:
    name: Check generated files are up to date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "npm"
      - run: npm install --omit optional --ignore-scripts
      - run: npm run build:all
      - uses: tj-actions/verify-changed-files@v15
        id: verify-changed-files
        with:
          files: |
            install-ninja/index.js
      - if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Generated files not up to date!')

  check-formatting:
    name: Check prettier ðŸ’…
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "npm"
      - run: npm install --omit optional --ignore-scripts
      - run: npm run format:check

  install-ninja:
    name: Test install-ninja action ðŸ§ª
    needs: [check-up-to-date]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            ninja-platform: linux
          - os: macos-latest
            ninja-platform: mac
          - os: windows-latest
            ninja-platform: win
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install Ninja ðŸ¥·
        id: install-ninja
        uses: ./install-ninja
        with:
          platform: ${{ matrix.ninja-platform }}
      - name: Print ninja version
        run: ninja --version
      - name: Print ninja.exe version
        run: ninja.exe --version
      - name: Print ninja output version
        run: ${{ steps.install-ninja.outputs.which }} --version

  install-ditto:
    name: Test install-ditto action ðŸ§ª
    needs: [check-up-to-date]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            ditto-platform: linux
          - os: macos-latest
            ditto-platform: macos
          - os: windows-latest
            ditto-platform: windows
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install ditto
        id: install-ditto
        uses: ./install-ditto
        with:
          platform: ${{ matrix.ditto-platform }}
      - name: Print ditto version
        run: ditto --version
      - name: Print ditto.exe version
        run: ditto.exe --version
      - name: Print ditto output version
        run: ${{ steps.install-ditto.outputs.which }} --version

  setup-ditto:
    name: Test setup-ditto action ðŸ§ª
    needs: [check-up-to-date]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            ditto-platform: linux
          - os: macos-latest
            ditto-platform: macos
          - os: windows-latest
            ditto-platform: windows
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup ditto
        id: setup-ditto
        uses: ./setup-ditto
        with:
          platform: ${{ matrix.ditto-platform }}
      - name: Print ditto version
        run: ${{ steps.setup-ditto.outputs.which }} --version
      - name: Print ninja version
        run: ${{ steps.setup-ditto.outputs.which-ninja }} --version
      - name: Print ditto cache dir
        run: echo ${{ steps.setup-ditto.outputs.cache-dir }}
